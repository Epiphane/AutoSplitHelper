// This file has been automatically generated by the Unreal Header Implementation tool

#include "Buildables/FGBuildableGeneratorNuclear.h"
#include "Replication/FGReplicationDetailInventoryComponent.h"

AFGBuildableGeneratorNuclear::AFGBuildableGeneratorNuclear() : Super() {
	this->mOutputInventory = nullptr;
	this->mOutputInventoryHandler = CreateDefaultSubobject<UFGReplicationDetailInventoryComponent>(TEXT("WasteInventoryHandler"));
	this->mCurrentGeneratorNuclearWarning = EGeneratorNuclearWarning::GNW_None;
}
void AFGBuildableGeneratorNuclear::GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const {
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
	DOREPLIFETIME(AFGBuildableGeneratorNuclear, mCurrentGeneratorNuclearWarning);
}
void AFGBuildableGeneratorNuclear::BeginPlay(){ }
void AFGBuildableGeneratorNuclear::Factory_Tick(float dt){ }
void AFGBuildableGeneratorNuclear::OnRep_ReplicationDetailActor(){ }
bool AFGBuildableGeneratorNuclear::Factory_HasPower() const{ return bool(); }
bool AFGBuildableGeneratorNuclear::CanStartPowerProduction_Implementation() const{ return bool(); }
bool AFGBuildableGeneratorNuclear::CanLoadFuel() const{ return bool(); }
void AFGBuildableGeneratorNuclear::LoadFuel(){ }
void AFGBuildableGeneratorNuclear::OnReplicationDetailActorRemoved(){ }
AFGReplicationDetailActor_GeneratorNuclear* AFGBuildableGeneratorNuclear::GetCastRepDetailsActor() const{ return nullptr; }
bool AFGBuildableGeneratorNuclear::IsWasteFull() const{ return bool(); }
void AFGBuildableGeneratorNuclear::TryProduceWaste(){ }
bool AFGBuildableGeneratorNuclear::CanFitWasteOfNextFuelClass() const{ return bool(); }

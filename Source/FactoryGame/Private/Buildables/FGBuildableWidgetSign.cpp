// This file has been automatically generated by the Unreal Header Implementation tool

#include "Buildables/FGBuildableWidgetSign.h"
#include "Components/SceneComponent.h"
#include "Components/WidgetComponent.h"

AFGBuildableWidgetSign::AFGBuildableWidgetSign() : Super() {
	this->mWidgetComponent = CreateDefaultSubobject<UWidgetComponent>(TEXT("WidgetDisplayRoot"));
	this->mSignTypeDescriptor = nullptr;
	this->mPrefabLayout = nullptr;
	this->mGainSignificanceDistance = 10000.0;
	this->mWidgetMaterial = nullptr;
	this->mActivePrefabLayout = nullptr;
	this->mForegroundColor = FLinearColor(0.0, 0.0, 0.0, 0.0);
	this->mBackgroundColor = FLinearColor(0.0, 0.0, 0.0, 0.0);
	this->mAuxilaryColor = FLinearColor(0.0, 0.0, 0.0, 0.0);
	this->mEmissive = 1.0;
	this->mGlossiness = 0.0;
	this->mDataVersion = 0;
	this->mAllowColoring = false;
	this->mWidgetComponent->SetupAttachment(RootComponent);
}
void AFGBuildableWidgetSign::GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const {
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
	DOREPLIFETIME(AFGBuildableWidgetSign, mDataVersion);
}
void AFGBuildableWidgetSign::BeginPlay(){ }
void AFGBuildableWidgetSign::EndPlay(const EEndPlayReason::Type EndPlayReason){ }
void AFGBuildableWidgetSign::PreSaveGame_Implementation(int32 saveVersion, int32 gameVersion){ }
void AFGBuildableWidgetSign::PostLoadGame_Implementation(int32 saveVersion, int32 gameVersion){ }
void AFGBuildableWidgetSign::OnConstruction(const FTransform& transform){ }
AFGBuildable* AFGBuildableWidgetSign::GetBuildable_Implementation(){ return nullptr; }
TSubclassOf< UFGSignTypeDescriptor > AFGBuildableWidgetSign::GetSignTypeDescriptor_Implementation(){ return TSubclassOf<UFGSignTypeDescriptor>(); }
FVector2D AFGBuildableWidgetSign::GetSignDimensions_Implementation(){ return FVector2D(); }
void AFGBuildableWidgetSign::GainedSignificance_Implementation(){ }
void AFGBuildableWidgetSign::LostSignificance_Implementation(){ }
UFGFactoryClipboardSettings* AFGBuildableWidgetSign::CopySettings_Implementation(){ return nullptr; }
bool AFGBuildableWidgetSign::PasteSettings_Implementation(UFGFactoryClipboardSettings* settings){ return bool(); }
void AFGBuildableWidgetSign::OnBuildEffectFinished(){ }
void AFGBuildableWidgetSign::SetPrefabSignData(FPrefabSignData& signData){ }
void AFGBuildableWidgetSign::GetSignPrefabData(FPrefabSignData& out_signData){ }
void AFGBuildableWidgetSign::UpdateSignElements(FPrefabSignData& prefabSignData){ }
void AFGBuildableWidgetSign::OnRep_SignDataDirty(){ }

// This file has been automatically generated by the Unreal Header Implementation tool

#include "UI/FGCompassObjectWidget.h"

void UFGCompassObjectWidget::NativePreConstruct(){ }
void UFGCompassObjectWidget::Tick(FGeometry MyGeometry, float InDeltaTime){ }
void UFGCompassObjectWidget::UpdatePositionInCompass(float halfWidth, FVector2D origin){ }
void UFGCompassObjectWidget::SetActorRepresentation( UFGActorRepresentation* actorRepresentation){ }
void UFGCompassObjectWidget::OnCompassObjectAddedToPanel_Implementation(UCanvasPanelSlot* parentSlot){ }
void UFGCompassObjectWidget::OnCompassObjectUpdated_Implementation(){ }
FLinearColor UFGCompassObjectWidget::IsHighlighted(bool& out_IsHighlighted,  bool& out_HighlightedByLocalPlayer) const{ return FLinearColor(); }
bool UFGCompassObjectWidget::GetCompassObjectVisbility() const{ return bool(); }
void UFGCompassObjectWidget::UpdateCompassObjectVisbility(){ }
void UFGCompassObjectWidget::SetCompassObjectVisbility(bool visibile){ }
void UFGCompassObjectWidget::UpdateCompassViewDistance(){ }
float UFGCompassObjectWidget::GetRepresentationDistanceFromPlayer(){ return float(); }
FVector UFGCompassObjectWidget::GetDirectionFromLocation(FVector location){ return FVector(); }
float UFGCompassObjectWidget::GetAngleFromDirection(FVector direction){ return float(); }
void UFGCompassObjectWidget::OnMarkerHighlightUpdated( UFGActorRepresentation* actorRepresentation, bool highlighted,  AFGPlayerState* playerState){ }

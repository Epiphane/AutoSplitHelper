// This file has been automatically generated by the Unreal Header Implementation tool

#include "Creature/FGCreatureAction.h"

UFGCreatureAction::UFGCreatureAction(const FObjectInitializer& ObjectInitializer) : Super(ObjectInitializer) {
	this->mCreatureController = nullptr;
	this->mCreature = nullptr;
	this->mCharacterMovement = nullptr;
	this->mCurrentTarget = nullptr;
	this->mTargetRequirements.TargetType = ECreatureActionTargetSelectionType::None;
	this->mTargetRequirements.VisibilityRequirement = ETargetVisibilityRequirement::TVR_None;
	this->mTargetRequirements.MinimumAggro = 0.0;
	this->mShouldInheritTarget = true;
	this->mCancelsOnStateChange = true;
	this->mReceivedStateChange = false;
	this->mMustBeGrounded = true;
}
bool UFGCreatureAction::ExecuteAction(){ return bool(); }
bool UFGCreatureAction::InitializeAction(AController* controller, APawn* pawn){ return bool(); }
void UFGCreatureAction::Tick(float DeltaTime){ }
bool UFGCreatureAction::SetupAction_Implementation(){ return bool(); }
bool UFGCreatureAction::CanPerformAction_Implementation() const{ return bool(); }
void UFGCreatureAction::CleanupAction_Implementation(bool actionSuccess){ }
bool UFGCreatureAction::IsTickable() const{ return bool(); }
bool UFGCreatureAction::ExecuteMainAction(){ return bool(); }
bool UFGCreatureAction::IsValidTarget_Implementation(AActor* Target) const{ return bool(); }
void UFGCreatureAction::OnCreatureStunUpdate(bool isStunned){ }
void UFGCreatureAction::OnCreatureStateChanged( AFGCreatureController* creatureController, ECreatureState previousState, ECreatureState newState){ }
void UFGCreatureAction::InternalActionCleanup(bool actionSuccess){ }
void UFGCreatureAction::SetupTarget(){ }
void UFGCreatureAction::NetMulticast_SetTarget_Implementation( AActor* target){ }
